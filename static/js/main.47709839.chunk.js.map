{"version":3,"sources":["Components/Navigation.js","Components/shopContext.js","Components/Loading.js","Components/Home.js","Components/Footer.js","Components/Signin.js","Components/ThreadPage.js","Components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","h","w","hoverBg","rounded","m","r","shadow","hoverShadow","name","size","color","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","Link","Component","ShopContext","React","createContext","client","Consumer","Client","buildClient","storefrontAccessToken","domain","ShopProvider","state","products","product","checkout","isCartOpen","createCheckout","a","create","localStorage","setItem","setState","fetchCheckout","checkoutId","fetch","then","addItemToCheckout","variantId","quantity","lineItemsToAdd","parseInt","addLineItems","openCart","fetchAllProducts","fetchAll","fetchProductWithId","closeCart","this","Provider","value","props","children","Loading","d","align","justify","pos","top","bottom","right","left","style","zIndex","Home","useContext","useEffect","map","key","to","textDecoration","p","bgImg","images","src","bgSize","bgPos","transition","b","tag","textWeight","textSize","textDecor","textColor","variants","price","Footer","fullYear","Date","getFullYear","fixed","Container","Col","lg","signinApi","Signin","handleSubmit","e","preventDefault","console","log","newUsers","firstName","lastName","email","postUserData","axios","post","res","data","handleUserInput","bind","target","get","Form","onSubmit","Row","xs","Label","htmlFor","srOnly","Control","onChange","placeholder","Check","type","label","Button","ThreadPage","useParams","y","description","onClick","Cart","lineItems","isOpen","onClose","flexDir","border","borderColor","hoverTextColor","flexGrow","overflow","flexWrap","length","item","t","image","engine","Styletron","App","debug","debugAfterHydration","class","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.47709839.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport { Icon, Button, Anchor } from \"atomize\";\r\n\r\nclass Navigation extends Component {\r\n\r\n    \r\n    render() {\r\n\r\n        \r\n\r\n        return (\r\n        \r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">FireThreads</Navbar.Brand>\r\n\r\n        <Button \r\n            h=\"1.5rem\"\r\n            w=\"1.5rem\"\r\n            bg=\"warning700\"\r\n            hoverBg=\"warning600\"\r\n            rounded=\"circle\"\r\n            m={{ r: \"1rem\" }}\r\n            shadow=\"2\"\r\n            hoverShadow=\"4\">\r\n        <Anchor href=\"https://twitter.com/bfloblk\">\r\n        <Icon name=\"Twitter\" size=\"20px\" color=\"white\" />\r\n        </Anchor>\r\n        </Button>\r\n\r\n        <Button \r\n            h=\"1.5rem\"\r\n            w=\"1.5rem\"\r\n            bg=\"warning700\"\r\n            hoverBg=\"warning600\"\r\n            rounded=\"circle\"\r\n            m={{ r: \"1rem\" }}\r\n            shadow=\"2\"\r\n            hoverShadow=\"4\">\r\n        <Anchor href=\"https://facebook.com/bfloblk\">\r\n        <Icon name=\"Facebook\" size=\"20px\" color=\"white\" />\r\n        </Anchor>\r\n        </Button>\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                \r\n                    <NavDropdown title=\"Threads\" id=\"collasible-nav-dropdown\">\r\n                         <NavDropdown.Item href=\"/\">Men's Clothing</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Nav>\r\n                    <Nav.Link href=\"/Signin\">Sign in</Nav.Link>\r\n                    <Nav.Link  href=\"/Cart\">Cart</Nav.Link>\r\n                </Nav>\r\n\r\n            </Navbar.Collapse>\r\n    </Navbar>\r\n    \r\n        )\r\n}}\r\n\r\nexport default Navigation;","import React, { Component } from \"react\";\r\nimport Client from \"shopify-buy\";\r\n\r\nconst ShopContext = React.createContext();\r\n\r\nconst ShopConsumer = ShopContext.Consumer;\r\n\r\nexport { ShopConsumer, ShopContext };\r\n\r\n//Accessing the API\r\nconst client = Client.buildClient({\r\n  storefrontAccessToken: \"dd4d4dc146542ba7763305d71d1b3d38\",\r\n  domain: \"graphql.myshopify.com\",\r\n});\r\n//Initiating state for the products, checkout and cart\r\nclass ShopProvider extends Component {\r\n  state = {\r\n    products: [],\r\n    product: {},\r\n    checkout: {},\r\n    isCartOpen: false,\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (localStorage.checkout) {\r\n      this.fetchCheckout(localStorage.checkout);\r\n    } else {\r\n      this.createCheckout();\r\n    }\r\n  \r\n  }\r\n\r\n  createCheckout = async () => {\r\n    const checkout = await client.checkout.create();\r\n    localStorage.setItem(\"checkout\", checkout.id);\r\n    await this.setState({ checkout: checkout });\r\n  };\r\n\r\n  fetchCheckout = async (checkoutId) => {\r\n    client.checkout\r\n      .fetch(checkoutId)\r\n      .then((checkout) => {\r\n        this.setState({ checkout: checkout });\r\n      })\r\n      \r\n  };\r\n\r\n  addItemToCheckout = async (variantId, quantity) => {\r\n    const lineItemsToAdd = [\r\n      {\r\n        variantId,\r\n        quantity: parseInt(quantity, 10),\r\n      },\r\n    ];\r\n    const checkout = await client.checkout.addLineItems(\r\n      this.state.checkout.id,\r\n      lineItemsToAdd\r\n    );\r\n    this.setState({ checkout: checkout });\r\n  \r\n\r\n    this.openCart();\r\n  };\r\n\r\n  fetchAllProducts = async () => {\r\n    const products = await client.product.fetchAll();\r\n    this.setState({ products: products });\r\n  };\r\n\r\n  fetchProductWithId = async (id) => {\r\n    const product = await client.product.fetch(id);\r\n    this.setState({ product: product });\r\n   \r\n\r\n    return product;\r\n  };\r\n\r\n  closeCart = () => {\r\n    this.setState({ isCartOpen: false });\r\n  };\r\n  openCart = () => {\r\n    this.setState({ isCartOpen: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ShopContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          fetchAllProducts: this.fetchAllProducts,\r\n          fetchProductWithId: this.fetchProductWithId,\r\n          closeCart: this.closeCart,\r\n          openCart: this.openCart,\r\n          addItemToCheckout: this.addItemToCheckout,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ShopContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShopProvider;","import React from \"react\";\r\nimport { Div, Icon } from \"atomize\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Div\r\n      bg=\"transparent\"\r\n      d=\"flex\"\r\n      align=\"center\"\r\n      justify=\"center\"\r\n      pos=\"absolute\"\r\n      top=\"0\"\r\n      bottom=\"0\"\r\n      right=\"0\"\r\n      left=\"0\"\r\n      style={{ zIndex: -1 }}\r\n    >\r\n      <Icon name=\"Loading3\" size=\"4rem\" color=\"brand500\" />\r\n    </Div>\r\n  );\r\n};\r\nexport default Loading;","import React, { useContext, useEffect }  from 'react'\r\nimport { ShopContext } from './shopContext';\r\nimport { Text, Div, Row, Col, Container } from \"atomize\";\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from'./Loading';\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const {fetchAllProducts, products} = useContext(ShopContext)\r\n\r\n    useEffect(() => {\r\n        fetchAllProducts()\r\n\r\n        return () => {\r\n\r\n        };\r\n    }, [fetchAllProducts])\r\n\r\n\r\n    if (!products) return <Loading/>\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {products.map(product => (\r\n                    <Col key={product.id} size=\"3\" >\r\n                        <Link to={`/product/${product.id}`} style={{ textDecoration: 'none' }}>\r\n                            <Div p=\"2rem\">\r\n                                <Div \r\n                                    h=\"20rem\"\r\n                                    bgImg={product.images[0].src}\r\n                                    bgSize=\"cover\"\r\n                                    bgPos=\"center center\"\r\n                                    shadow=\"3\"\r\n                                    hoverShadow=\"4\"\r\n                                    transition=\"0.3s\"\r\n                                    m={{ b: \"1.5rem\" }}\r\n                                    >\r\n                                </Div>\r\n                                <Text tag=\"h1\" textWeight=\"300\" textSize=\"subheader\" textDecor=\"none\" textColor=\"orange\">{product.title}</Text>\r\n                                <Text tag=\"h2\" textWeight=\"300\" textSize=\"body\" textDecor=\"none\" textColor=\"white\">${product.variants[0].price}</Text>\r\n                            </Div>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react';\r\nimport {Navbar, Container, Col} from 'react-bootstrap';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        let fullYear = new Date().getFullYear();\r\n\r\n\r\n\r\n        return (\r\n            <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Col lg={12} className=\"text-center text-muted\">\r\n                        <div>\r\n                            {fullYear} - {fullYear+1}, All Rights Reserved by FireThreads\r\n                        </div>\r\n                    </Col>\r\n                </Container>\r\n\r\n\r\n\r\n            </Navbar>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport {Form, Col, Button, Container} from 'react-bootstrap';\r\n\r\nconst signinApi = 'https://glacial-wave-82551.herokuapp.com/user-management/v1/users/'\r\n\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName:\"\",\r\n            lastName:\"\",\r\n            email:\"\",\r\n        };\r\n        this.handleUserInput = this.handleUserInput.bind(this);\r\n\r\n    }\r\n    handleUserInput(e) {\r\n        let {name, value} = e.target\r\n        this.setState({[name] :value})\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        console.log('My post')\r\n\r\n        let newUsers = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email:this.state.email,\r\n        }\r\n\r\n    this.postUserData(newUsers)\r\n    }\r\n    \r\n    postUserData=(newUsers)=>\r\n    axios\r\n    .post(signinApi, newUsers)\r\n    .then(res=>{\r\n        const data = res.data\r\n        console.log(data);\r\n    })\r\n\r\n    getData(){\r\n        axios.get(signinApi)\r\n        .then(res => {\r\n            const data = res.data\r\n            console.log(data);\r\n        \r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"App-header\">\r\n                <br></br>\r\n               <h1 className=\"sign-in\">Please Sign In</h1>\r\n               <br></br>\r\n<Container lg=\"auto\">\r\n               <Form onSubmit={this.handleSubmit}>\r\n  <Form.Row className=\"align-items-center\">\r\n    <Col xs=\"auto\">\r\n      <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n        First Name\r\n      </Form.Label>\r\n      <Form.Control onChange= {this.handleUserInput}\r\n        className=\"mb-2\"\r\n        name=\"firstName\"\r\n        id=\"inlineFormInput\"\r\n        value={this.state.firstName} \r\n        placeholder=\"Enter Your First Name\"/>\r\n    </Col>\r\n\r\n    <Col xs=\"auto\">\r\n      <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n        Last Name\r\n      </Form.Label>\r\n      <Form.Control onChange={this.handleUserInput}\r\n        className=\"mb-2\"\r\n        name=\"lastName\"\r\n        id=\"inlineFormInput\"\r\n        value={this.state.lastName} \r\n        placeholder=\"Enter Your Last Name\"/>\r\n        \r\n    </Col>\r\n\r\n    <Col xs=\"auto\">\r\n      <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n        Email\r\n      </Form.Label>\r\n        <Form.Control onChange={this.handleUserInput}\r\n        id=\"inlineFormInputGroup\" \r\n        value={this.state.email} \r\n        name=\"email\"\r\n        placeholder=\"Enter Your Email\">\r\n\r\n        </Form.Control>\r\n    </Col>\r\n\r\n    <Col xs=\"auto\">\r\n      <Form.Check\r\n        type=\"checkbox\"\r\n        id=\"autoSizingCheck\"\r\n        className=\"mb-2\"\r\n        label=\"Remember me\"\r\n      />\r\n    </Col>\r\n    <Col xs=\"auto\">\r\n      <Button onSubmit={this.handleSubmit} type=\"submit\" className=\"mb-2\">\r\n        Submit\r\n      </Button>\r\n    </Col>\r\n  </Form.Row>\r\n</Form>\r\n</Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Signin;","import React, { useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ShopContext } from './shopContext';\r\nimport { Text, Div, Button, Row, Col, Container } from 'atomize'\r\nimport Loading from './Loading';\r\n\r\nconst ThreadPage = () => {\r\n    let { id } = useParams()\r\n    const { fetchProductWithId, addItemToCheckout, product } = useContext(ShopContext)\r\n \r\n\r\n    useEffect(() => {\r\n        fetchProductWithId(id)\r\n        \r\n       \r\n        return () => {\r\n          \r\n        };\r\n    \r\n    }, [ fetchProductWithId, id])\r\n\r\n    if (!product.title) return <Loading />\r\n    return (\r\n        <Container>\r\n            <Row m ={{ b: \"2rem\" }} p=\"2rem\">\r\n                <Col>\r\n                    <Div bgImg={product.images[0].src} shadow=\"3\" bgSize=\"cover\" w=\"100%\" bgPos=\"center center\" h=\"40rem\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Text tag=\"h1\" textColor=\"white\" textWeight=\"200\" m={{ y: '2rem' }}>{product.title}</Text>\r\n                    <Text tag=\"h3\" m={{ y: '2rem' }} textWeight=\"200\" textColor=\"orange\">${product.variants[0].price}</Text>\r\n                    <Text tag=\"p\" textSize=\"paragraph\" textColor=\"white\" textWeight=\"200\">{product.description}</Text>\r\n                    <Button rounded=\"0\" shadow=\"3\" bg=\"white\" m={{ y: '2rem' }} onClick={() => addItemToCheckout(product.variants[0].id, 1)}>Add To Cart</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ThreadPage;","import React, { useContext } from 'react'\r\nimport { Div, SideDrawer, Text, Row, Col, Anchor, Button, Container, Icon } from \"atomize\";\r\nimport {ShopContext} from './shopContext';\r\n\r\nconst Cart = () => {\r\n\r\n    const { isCartOpen, closeCart, checkout } = useContext(ShopContext)\r\n\r\n    if (checkout.lineItems) {\r\n        return (\r\n            <SideDrawer isOpen={isCartOpen} onClose={closeCart}>\r\n                <Container d=\"flex\" flexDir=\"column\" h=\"100%\">\r\n                    <Row justify=\"space-between\" border={{ b: '1px solid' }} p=\"0.7rem\" borderColor=\"gray300\">\r\n                        <Text tag=\"h1\" textColor=\"black500\" textSize=\"paragraph\" hoverTextColor=\"black700\" transition=\"0.3s\">Bag</Text>\r\n                        <Anchor onClick={() => closeCart()} ><Icon name=\"Cross\" color=\"black500\"/></Anchor>\r\n                    </Row>\r\n                    <Row flexGrow=\"2\" p=\"0.7rem\" overflow=\"auto\" flexWrap=\"nowrap\" flexDir=\"column\">\r\n                        {checkout.lineItems.length < 1 ?\r\n                            <Row>\r\n                                <Col><Text tag=\"h1\" textColor=\"black500\" textSize=\"paragraph\" hoverTextColor=\"black700\" transition=\"0.3s\">Cart Is Empty</Text></Col>\r\n                            </Row>\r\n                            :\r\n                            <>\r\n                                {checkout.lineItems && checkout.lineItems.map(item => (\r\n                                    <Row key={item.id} p={{ t:\"5px\" }}>\r\n                                        <Col>\r\n                                            <Div bgImg={item.variant.image.src} bgSize=\"cover\" bgPos=\"center\" h=\"5rem\" w=\"4rem\"/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Text>{item.title}</Text>\r\n                                            <Text>{item.variant.title}</Text>\r\n                                            <Text>{item.quantity}</Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Text>{item.variant.price}</Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ))}\r\n                            </>\r\n                        }\r\n                    </Row>\r\n                    <Row border={{ t: '1px solid' }} p=\"0.7rem\" borderColor=\"gray300\">\r\n                            <Button w=\"100%\" rounded=\"0\" bg=\"black500\" shadow=\"2\" hoverShadow=\"3\" m={{t: '1rem'}}>\r\n                                Checkout\r\n                            </Button>\r\n                    </Row>\r\n                </Container>\r\n            </SideDrawer>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default Cart;","import React from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport Signin from './Components/Signin';\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport ThreadPage from './Components/ThreadPage';\nimport ShopProvider from './Components/shopContext';\nimport Cart from './Components/Cart';\n\n\n\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\nconst engine = new Styletron();\n\nfunction App() {\n  return (\n    <ShopProvider>\n    <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n      <BrowserRouter>\n    <div className=\"App\">\n\n      <Navigation/>\n      <div class=\"container\">\n        \n        <div class=\"jumbotron\">\n            <h1>FIRETHREADS</h1>\n            <p>PROVIDING ALL THE LATEST IN MEN'S FASHION EST. 2020</p>\n\n        </div>\n      </div>\n      <Cart/>\n      <Switch>\n      <Route path='/' exact = {true} component={Home} />\n      <Route path='/Signin' exact = {true} component={Signin} />\n      <Route path=\"/product/:id\">\n        <ThreadPage/>\n        </Route>\n\n      <Route path='/Cart' exact= {true} component={Cart}/>\n      </Switch>\n      <Footer/>\n      </div>\n    </BrowserRouter>\n    </StyletronProvider>\n    </ShopProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}